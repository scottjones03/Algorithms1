def counting_sort (arr: Array, min: int, max: int) -> Array:
    count_arr = MakeArray size=(max-min+1), values=0
    for i=0 to len(arr)-1 do
        count_arr[arr[i]-min] += 1
    sorted_arr = MakeArray size=len(arr), values=None
    for i=0 to len(arr)-1 do
        idx=SumElements count_arr[0:arr[i]]
        while sorted_arr[idx] is not None:
            idx = idx + 1
        sorted_arr[idx]=arr[i]
    return sorted_arr

CountingSort(A)
  //A[]-- Initial Array to Sort
  //Complexity: O(k)
  //k is range between min and max.
  for i = 0 to k do
    c[i] = 0

  //Storing Count of each element
  //Complexity: O(n)
  for j = 0 to n do
    c[A[j]] = c[A[j]] + 1

  // Change C[i] such that it contains actual
  //position of these elements in output array
  ////Complexity: O(k)
  for i = 1 to k do
    c[i] = c[i] + c[i-1]

  //Build Output array from C[i]
  //Complexity: O(n)
  for j = n-1 downto 0 do
    B[ c[A[j]]-1 ] = A[j]
    c[A[j]] = c[A[j]] - 1
end func